version: '3'
services:
  api:
    build: ./web/backend
    container_name: api
    ports:
      - "9000"
    links:
      - db
      - kafka
    restart: always
    networks:
      - scribe-net
  db:
    build: ./db
    container_name: db
    ports:
      - 27017:27017
    restart: always
    networks:
      - scribe-net
  frontend:
    build: ./web/frontend
    container_name: frontend
    ports:
      - "80"
    restart: always
    networks:
      - scribe-net
  zookeeper:
    build: ./zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: always
    networks:
      - scribe-net
  kafka:
    build: ./kafka
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "Scribe:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - scribe-net
  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "8000:8000"
      - "8001:80"
    restart: always
    networks:
      - scribe-net
    
networks:
  scribe-net: